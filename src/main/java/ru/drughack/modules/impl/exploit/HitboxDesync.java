package ru.drughack.modules.impl.exploit;

import lombok.Getter;
import net.minecraft.util.math.Vec3d;
import meteordevelopment.orbit.EventHandler;
import ru.drughack.api.event.impl.EventTick;
import ru.drughack.modules.api.Category;
import ru.drughack.modules.api.Module;
import ru.drughack.modules.settings.Setting;
import ru.drughack.utils.math.TimerUtils;

public class HitboxDesync extends Module {

    public Setting<Boolean> alternating = new Setting<>("Alternating", false);
    public Setting<Boolean> minimal = new Setting<>("Minimal", false, v -> alternating.getValue());
    public Setting<Boolean> specific = new Setting<>("Specific", false, v -> alternating.getValue());
    public Setting<Boolean> close = new Setting<>("Close", false);

    public HitboxDesync() {
        super("HitboxDesync", "Crash the crystalaura", Category.Exploit);
    }

    @Getter
    private final TimerUtils timer = new TimerUtils();

    @EventHandler(priority = Integer.MAX_VALUE)
    public void onTick(EventTick event) {
        if (mc.player == null || mc.world == null) return;
        Vec3d vec3d = mc.player.getBlockPos().toCenterPos();
        double offset = minimal.getValue() ? 0.001 : 0.002;
        double timeout = specific.getValue() ? 500 : 1500;
        boolean flag = timer.hasTimeElapsed(timeout) && alternating.getValue() && !mc.player.isSneaking();
        boolean flagX = (vec3d.x - mc.player.getX()) > 0;
        boolean flagZ = (vec3d.z - mc.player.getZ()) > 0;
        double x = vec3d.x + ((flag ? offset : 0) * (flagX ? 1 : -1)) + 0.20000000009497754 * (flagX ? -1 : 1);
        double z = vec3d.z + ((flag ? offset : 0) * (flagZ ? 1 : -1)) + 0.2000000000949811 * (flagZ ? -1 : 1);
        mc.player.setPosition(x, mc.player.getY(), z);
        if (timer.hasTimeElapsed(timeout)) timer.reset();
        toggle();
    }
}